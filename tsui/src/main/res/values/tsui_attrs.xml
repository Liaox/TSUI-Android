<?xml version="1.0" encoding="utf-8"?>
<resources>
    <!--有加载动画的按钮 TSLoadingButton-->
    <declare-styleable name="tsLoadButton">
        <!--按钮文字-->
        <attr name="tsText" format="reference|string"/>
        <!--按钮文字颜色-->
        <attr name="tsTextColor" format="color|reference"/>
        <!--按钮文字大小-->
        <attr name="android:textSize"/>
        <!--加载的动画drawable-->
        <attr name="tsLoadingView" format="reference"/>
    </declare-styleable>

    <!--组合按钮-->
    <declare-styleable name="tsCombinationBtn">
        <!--左图-->
        <attr name="tsLeftImage" format="reference"/>
        <!--右图-->
        <attr name="tsRightImage" format="reference"/>
        <!--左边文字-->
        <attr name="tsLeftText" format="reference|string"/>
        <!--右边文字-->
        <attr name="tsRightText" format="reference|string"/>
        <!--左边文字颜色-->
        <attr name="tsLeftTextColor" format="reference|color"/>
        <!--右边文字颜色-->
        <attr name="tsRightTextColor" format="reference|color"/>
        <!--是否显示分割线-->
        <attr name="tsShowLine" format="reference|boolean"/>
        <!--分割线左右间距-->
        <attr name="tsDividerLeftMargin" format="reference|dimension"/>
        <attr name="tsDividerRightMargin" format="reference|dimension"/>
        <!--左边文字左边的间距-->
        <attr name="tsLeftTextLeftPadding" format="reference|dimension"/>
    </declare-styleable>

    <!-- 可以设置 drawable 大小的 TSDrawableSizeTextView-->
    <declare-styleable name="TSDrawableSizeTextView">
        <attr name="tsCompoundDrawableWidth" format="dimension"/>
        <attr name="tsCompoundDrawableHeight" format="dimension"/>
    </declare-styleable>

    <!--组合输入框 文字 输入框-->
    <declare-styleable name="TSInputContainHint">
        <!--是否显示分割线-->
        <attr name="tsShowDiver" format="reference|boolean"/>
        <!--是否必填-->
        <attr name="tsIsRequired" format="enum">
            <enum name="visiable" value="0"/>
            <enum name="invisiable" value="4"/>
            <enum name="gone" value="8"/>
        </attr>
        <!--左边文字-->
        <attr name="tsLeftHintText" format="reference|string"/>
        <!--输入框提示-->
        <attr name="tsRightHint" format="reference|string"/>
        <!--输入的类型-->
        <attr name="tsRightInputType" format="reference|string"/>
        <!--输入长度-->
        <attr name="tsRightMaxLength" format="reference|integer"/>
        <!--内容高度-->
        <attr name="tsTotalMinHeight" format="reference|dimension"/>
        <!--输入行数最高-->
        <attr name="tsRightMaxLines" format="reference|integer"/>
    </declare-styleable>

    <!--带有前缀的输入框-->
    <declare-styleable name="TSPrefixEditText">
        <!--前缀文字的起始位置-->
        <attr name="tsPreStartPosition" format="integer"/>
        <!--前缀文字的内容-->
        <attr name="tsPreContent" format="string|reference"/>
    </declare-styleable>

    <!--组合输入框和按钮文字-->
    <declare-styleable name="TSInputLimitView">
        <!--输入的最大值-->
        <attr name="tsLimitSize" format="reference|integer"/>
        <!--输入多少字的时候显示 限制提示-->
        <attr name="tsShowLimitSize" format="reference|integer"/>
        <!--输入框的hint提示符-->
        <attr name="tsHintContent" format="reference|string"/>
        <!--编辑框显示的行数，超过就滚动-->
        <attr name="tsShowLines" format="reference|integer"/>
        <attr name="tsContent_size" format="dimension"/>
        <attr name="tsContent_gravity" format="enum">
            <enum name="left" value="3"/>
            <enum name="right" value="5"/>
        </attr>
    </declare-styleable>
    <!-- 有按下效果的TSFilterImageView -->
    <declare-styleable name="TSFilterImageView">
        <attr name="tsPressColor" format="reference|color"/>
        <attr name="tsPressShape">
            <enum name="square" value="0"/>
            <enum name="circle" value="1"/>
        </attr>
    </declare-styleable>

    <!--图文编辑框-->
    <declare-styleable name="TSMarkDownEditor">
        <!--输入框hint-->
        <attr name="tsTsMdHint" format="string"/>
    </declare-styleable>

    <declare-styleable name="TSEmptyView">
        <!--没有数据时的提示语-->
        <attr name="tsNoDataTip" format="string|reference"/>
        <!--没有数据时的图片-->
        <attr name="tsNoDataImage" format="reference"/>
        <!--没有网络时的提示语-->
        <attr name="tsNoNetTip" format="string|reference"/>
        <!--没有网络时的图片-->
        <attr name="tsNoNetImage" format="reference"/>
        <!--加载时的提示语-->
        <attr name="tsLadingTip" format="string|reference"/>
        <!--是否显示文字提示-->
        <attr name="tsIsShowTip" format="boolean"/>
        <!--是否显示图片提示-->
        <attr name="tsIsShowImage" format="boolean"/>
    </declare-styleable>

    <declare-styleable name="TSUserAvatarView">
        <!--头像大小-->
        <attr name="ts_avatare_size" format="dimension"/>
        <attr name="ts_ratio" format="float"/>

    </declare-styleable>

    <!--IconTextView图标文本控件-->
    <declare-styleable name="TSIconTextView">
        <!--文字大小-->
        <attr name="tsIconTextSize" format="dimension|reference"/>
        <!--文字颜色-->
        <attr name="tsIconTextColor" format="color|reference"/>

        <!--图片与文字间隔-->
        <attr name="tsIconGap" format="dimension|reference"/>

        <!--方向
             TOP：上边
             BOTTOM: 下边
             LEFT：左边
             RIGHT：右边
        -->
        <attr name="tsIconDirection">
            <enum name="TOP" value="0"/>
            <enum name="BOTTOM" value="1"/>
            <enum name="LEFT" value="2"/>
            <enum name="RIGHT" value="3"/>
        </attr>

        <!--图片资源-->
        <attr name="tsIcon" format="reference"/>
        <!--显示的文本-->
        <attr name="tsIconText" format="string|reference"/>

        <!--图片宽高,如果不设置宽度和高度的话，默认按照图片的宽度和高度来-->
        <attr name="tsIconWidth" format="dimension|reference"/>
        <attr name="tsIconHeight" format="dimension|reference"/>
    </declare-styleable>

    <declare-styleable name="TSExpandableTextView">
        <attr name="tsMaxLinesOnShrink" format="reference|integer" />
        <attr name="tsIsNeedShrink" format="boolean" />
        <attr name="tsEllipsisHint" format="reference|string" /><!--default is ..-->
        <attr name="tsToExpandHint" format="reference|string" /><!--"to expand" hint string, default is "Expand"-->
        <attr name="tsToShrinkHint" format="reference|string" /><!--"to shrink" hint string, default is "Shrink"-->
        <attr name="tsGapToExpandHint" format="reference|string" /><!--gap between "toExpandHint" and "trimmed text"-->
        <attr name="tsGapToShrinkHint" format="reference|string" /><!--gap between "toShrinkHint" and "trimmed text"-->
        <attr name="tsEnableToggle" format="reference|boolean" /><!--if toggle the state when click ExpandTextView-->
        <attr name="tsToExpandHintShow" format="reference|boolean" /><!--if show "toExpandHint"-->
        <attr name="tsToShrinkHintShow" format="reference|boolean" /><!--if show "toShrinkHint"-->
        <attr name="tsToExpandHintColor" format="reference|color" /><!--text color of "toExpandHint"-->
        <attr name="tsToShrinkHintColor" format="reference|color" /><!--text color of "toShrinkHint"-->
        <attr name="tsToExpandHintColorBgPressed" format="reference|color" /><!--background color if "toExpandHint" pressed-->
        <attr name="tsToShrinkHintColorBgPressed" format="reference|color" /><!--background color if "toShrinkHint" pressed-->
        <attr name="tsInitState" format="enum"><!--init state, default is shrink-->
            <enum name="shrink" value="0"/>
            <enum name="expand" value="1"/>
        </attr>
    </declare-styleable>
</resources>